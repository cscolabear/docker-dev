version: '3.7'

services:
  FPM:
    hostname: docker-php-fpm
    build:
      context: ./Dockerfiles/php-fpm
    image: cscolabear/7.3-fpm:0.1
    ports:
      - 9000:9000
    volumes:
      - ${VOLUMES_DRIVER}:/var/www:delegated
      - ./Dockerfiles/php-fpm/php.ini:/usr/local/etc/php/php.ini:ro
      - ./Dockerfiles/php-fpm/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini:ro
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          memory: 128M
      restart_policy:
        condition: on-failure
    extra_hosts:
      - "localhost:172.16.1.50"
      # - "any-your-project-domain:172.16.1.50"
    networks:
      app_net:
        ipv4_address: 172.16.1.40

  MYSQL:
    hostname: docker-mysql
    image: mysql:5.7
    ports:
      - 3306:3306
    command: --default-authentication-plugin=mysql_native_password
    volumes:
      - ./Database/mysql:/var/lib/mysql:delegated
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    command: mysqld --sql_mode="" --character-set-server=utf8 --init-connect='SET NAMES UTF8;'
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          memory: 256M
      restart_policy:
        condition: on-failure
    networks:
      - app_net

  NGINX:
    hostname: docker-nginx
    build:
      context: ./Dockerfiles/nginx
    image: cscolabear/nginx:0.1-brotli
    ports:
      - 80:80
      - 443:443
    volumes:
      - ${VOLUMES_DRIVER}:/var/www:delegated
      - ./Logs:/var/log/nginx:delegated
      - ./Dockerfiles/nginx/sites-enabled:/etc/nginx/sites-enabled:ro
    depends_on:
      - FPM
      # - drone-server
    deploy:
      resources:
        limits:
          cpus: '0.10'
          memory: 30M
        reservations:
          memory: 10M
      restart_policy:
        condition: on-failure
    networks:
      app_net:
        ipv4_address: 172.16.1.50
        # aliases:
          # - any-your-project-domain
          # - local.project

  MEMCACHED:
    hostname: docker-memcached
    image: memcached:1.5
    ports:
      - 11211:11211
    environment:
      - MEMCACHED_USERNAME=${MEMCACHED_USERNAME}
      - MEMCACHED_PASSWORD=${MEMCACHED_PASSWORD}
    command:
      - '-m 128'
    deploy:
      resources:
        limits:
          cpus: '0.20'
          memory: 192M
      restart_policy:
        condition: on-failure
    networks:
      - app_net

  WORKSPACE:
    hostname: docker-workspace
    build:
      context: ./Dockerfiles/workspace
    image: cscolabear/workspace:0.2
    ports:
      - "3000"
    volumes:
      - ${VOLUMES_DRIVER}:/var/www
    depends_on:
      - FPM
      - MYSQL
      - MEMCACHED
    restart: on-failure
    extra_hosts:
      - "localhost:172.16.1.50"
      # - "any-your-project-domain:172.16.1.50"
    networks:
      app_net:
        ipv4_address: 172.16.1.30


  # drone-server:
  #   image: drone/drone:1
  #   ports:
  #     - 8080:80
  #   volumes:
  #     - ./Database/drone:/data
  #   restart: always
  #   environment:
  #     - DRONE_SERVER_HOST=${DRONE_SERVER_HOST}
  #     - DRONE_SERVER_PROTO=${DRONE_SERVER_PROTO}
  #     - DRONE_RPC_SECRET=${DRONE_RPC_SECRET}
  #     - DRONE_USER_CREATE=${DRONE_USER_CREATE}
  #     - DRONE_USER_FILTER=${DRONE_USER_FILTER}

  #     # GitHub Config
  #     - DRONE_GITHUB_SERVER=https://github.com
  #     - DRONE_GITHUB_CLIENT_ID=${DRONE_GITHUB_CLIENT_ID}
  #     - DRONE_GITHUB_CLIENT_SECRET=${DRONE_GITHUB_CLIENT_SECRET}

  #     - DRONE_LOGS_PRETTY=true
  #     - DRONE_LOGS_COLOR=true
  #   networks:
  #     - app_net

  # drone-runner:
  #   image: drone/drone-runner-docker:1
  #   restart: always
  #   depends_on:
  #     - drone-server
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #   environment:
  #     - DRONE_RPC_HOST=${DRONE_RPC_HOST}
  #     - DRONE_RPC_PROTO=${DRONE_RPC_PROTO}
  #     - DRONE_RPC_SECRET=${DRONE_RPC_SECRET}
  #     - DRONE_RUNNER_CAPACITY=1
  #   networks:
  #     - app_net



networks:
  app_net:
    driver: "bridge"
    ipam:
      config:
        - subnet: 172.16.1.0/16
